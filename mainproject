root@raspberrypi:/home/pi/SPI-Py/MFRC522-python# more k.py
import RPi.GPIO as GPIO
import MFRC522
import signal
import MySQLdb
import time

continue_reading = True

# Capture SIGINT for cleanup when the script is aborted
def end_read(signal,frame):
    global continue_reading
    print "Ctrl+C captured, ending read."
    continue_reading = False
    GPIO.cleanup()

# Hook the SIGINT
signal.signal(signal.SIGINT, end_read)

# Create an object of the class MFRC522
MIFAREReader = MFRC522.MFRC522()
#abrimos la conexion a la base de datos

db = MySQLdb.connect(host="localhost", user="root",passwd="SCANFC", db="NFC_ACCESS")
cursor = db.cursor()
# Welcome message
print "Welcome to the MFRC522 data read example"
print "Press Ctrl-C to stop."

# This loop keeps checking for chips. If one is near it will get the UID and authenticate
while continue_reading:

    # Scan for cards
    (status,TagType) = MIFAREReader.MFRC522_Request(MIFAREReader.PICC_REQIDL)
    existeRegistro=0

    # If a card is found
    if status == MIFAREReader.MI_OK:
        print "Card detected"

    # Get the UID of the card
    (status,uid) = MIFAREReader.MFRC522_Anticoll()

    # If we have the UID, continue
    if status == MIFAREReader.MI_OK:

        # Print UID
        print "Card read UID: "+str(uid[0])+","+str(uid[1])+","+str(uid[2])+","+str(uid[3])+","+str(uid[4])

        # This is the default key for authentication
        #key = [0xFF,0xFF,0xFF,0xFF,0xFF,0xFF]

        # Select the scanned tag
        MIFAREReader.MFRC522_SelectTag(uid)
        result=0
        print uid
        query="SELECT nombre,apellido FROM DOCENTE WHERE uid='%s'" % uid
        result=cursor.execute(query)
        print result
        type (result)
        if result==1:
                print "ACCESO CONCEDIDO"
        else:
                print "ACCESO NO AUTORIZADO"
        time.sleep(3)
cursor.close
db.close


        # Authenticate
        #status = MIFAREReader.MFRC522_Auth(MIFAREReader.PICC_AUTHENT1A, 8, key, uid)

        # Check if authenticated
        #if status == MIFAREReader.MI_OK:
         #   MIFAREReader.MFRC522_Read(8)
          #  MIFAREReader.MFRC522_StopCrypto1()
        #else:
         #   print "Authentication error"
